version: 0.2

env:
  variables:
    _PROJECT_NAME1: "user16-app"
    _PROJECT_NAME2: "user16-customer"
    _PROJECT_NAME3: "user16-pay"
    _PROJECT_NAME4: "user16-store"
    _PROJECT_NAME1_1: "app"
    _PROJECT_NAME2_1: "customer"
    _PROJECT_NAME3_1: "pay"
    _PROJECT_NAME4_1: "store"

phases:
  install:
    runtime-versions:
      java: corretto8
      docker: 18
    commands:
      - echo install kubectl
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $_PROJECT_NAME
      - echo $AWS_ACCOUNT_ID
      - echo $AWS_DEFAULT_REGION
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo start command
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...

      - cd uber/$_PROJECT_NAME1_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME1:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME2_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME2:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME3_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME3:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME4_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME4:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../../
  post_build:
    commands:
      - echo Pushing the Docker image...

      - cd uber/$_PROJECT_NAME1_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME1:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME2_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME2:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME3_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME3:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME4_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME4:$CODEBUILD_RESOLVED_SOURCE_VERSION

      
      - cd ../../
      
      - echo connect kubectl
      - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
      - kubectl config set-credentials admin --token="$KUBE_TOKEN"
      - kubectl config set-context default --cluster=k8s --user=admin
      - kubectl config use-context default
